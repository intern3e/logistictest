<!DOCTYPE html>
<html lang="th">
<head>
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="{{ asset('css/historypo.blade.css') }}">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <title>‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</title>

</head>
<body>
    <div class="header">
        <h2>‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á PO</h2>
        <div class="header-buttons">
            <a href="http://server_update:8000/solist" button  type="submit" class="btn btn-danger">üö™ ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</a>
        </div>
    </div>

        <div class="top-section">
        <form method="GET" action="{{ route('po.historypo') }}" class="filter-form" id="autoSearchForm">
             <label for="date">üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô / ‡∏ß‡∏±‡∏ô / ‡∏õ‡∏µ</label>
            <input type="date" id="date" name="date" value="{{ request('date', \Carbon\Carbon::today()->format('Y-m-d')) }}">
            <button type="submit" style="display: none;">‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</button>
        </form>

    
    <script>
        const form = document.getElementById('autoSearchForm');
        const dateInput = document.getElementById('date');
    
        // ‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
        dateInput.addEventListener('change', () => {
            form.submit();
        });
    
        // ‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        window.addEventListener('load', () => {
            if (!sessionStorage.getItem('hasAutoSubmitted')) {
                sessionStorage.setItem('hasAutoSubmitted', 'true');
                form.submit();
            }
        });
    </script>
    
            <div class="search-box">
                <input type="text" id="search-input" placeholder=" ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏¥‡∏•" onkeyup="searchTable()">
            </div>

            <div class="cartype">
                <label for="cartype">üöó ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ :</label>
                <select id="cartype" onchange="filterTable()">
                    <option value="">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</option>
                    <option value="1">‡∏£‡∏ñ‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏Ñ‡πå</option>
                    <option value="2">‡∏£‡∏ñ‡πÉ‡∏´‡∏ç‡πà</option>
                </select>
            </div>
            <div class="button-group">
                <button type="button" class="btn btn-primary" onclick="updateStatuspoback()">‡∏Ñ‡∏∑‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</button>
            </div>
            
        
        </div>
  
       <div class="table-container">
    <table>
        <input type="checkbox" id="checkAll" onclick="toggleCheckboxes()"> ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        <thead>
            <tr>
                <th>‡∏Ñ‡∏∑‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                <th>‡πÄ‡∏•‡∏Ç‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
                <th>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏¥‡∏•</th>
                <th>‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤</th>
                <th>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤</th>
                <th>‡∏•‡∏∞‡∏ï‡∏¥‡∏à‡∏π‡∏î‡∏•‡∏≠‡∏á‡∏à‡∏¥‡∏à‡∏π‡∏î</th>
                <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
                <th>‡∏ú‡∏π‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡∏ö‡∏¥‡∏•</th>
                <th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏ô‡∏™‡πà‡∏á</th>
                <th>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
            </tr>
        </thead>
        <tbody id="table-body">
            @foreach($pobill as $item)
                @if($item->statusdeli == 1 )
                    <tr>
                        <td>
                            <input type="checkbox" class="form-control1" name="status[]" data-po-detail-id="{{ $item->po_id}}">
                        </td>
                        <td>{{ $item->po_id }}</td>
                        <td>{{ $item->po_detail_id }}</td>
                        <td>{{ $item->store_name }}</td>
                        <td>{{ $item->store_address }}</td>  
                        <td>{{ $item->store_la_long }}</td>
                     <td>
    <div class="date-container">
        <span class="date-display" id="date-display-{{ $item->po_detail_id }}">
            {{ \Carbon\Carbon::parse($item->recvDate)->format('d/m/Y') }}
        </span>
        <div class="date-edit-form" id="date-edit-form-{{ $item->po_detail_id }}" style="display:none;">
            <input type="date" class="form-control form-control-sm" id="new-date-{{ $item->po_detail_id }}" 
                value="{{ \Carbon\Carbon::parse($item->recvDate)->format('Y-m-d') }}"
                onchange="validateDateFormat(this)">
            <div class="mt-1">
                <button type="button" class="btn btn-sm btn-success" 
                        onclick="saveNewDate('{{ $item->po_detail_id }}')">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
                <button type="button" class="btn btn-sm btn-secondary" 
                        onclick="cancelEdit('{{ $item->po_detail_id }}')">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
            </div>
        </div>
        <button type="button" class="btn btn-sm btn-primary edit-date-btn" 
                id="edit-btn-{{ $item->po_detail_id }}"
                onclick="showEditForm('{{ $item->po_detail_id }}')">
            <i class="fas fa-edit"></i> ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
        </button>
    </div>
</td>

                        <td>{{ $item->emp_name }}</td>
                        <td> 
                            @if($item->cartype == 1)
                                ‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏Ñ‡πå
                            @elseif($item->cartype == 2)
                                ‡∏£‡∏ñ‡πÉ‡∏´‡∏ç‡πà
                            @else
                                ‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
                            @endif
                        </td>
                        <td><a href="javascript:void(0);" 
                            onclick="openPopup(
                                '{{ $item->po_id }}',
                                '{{ $item->po_detail_id }}',    
                                '{{ $item->store_name}}',
                                '{{ $item->store_address}}',
                                '{{ \Carbon\Carbon::parse($item->recvDate)->format('d/m/Y') }}',
                                '{{ $item->emp_name}}',
                                '{{ $item->cartype}}'
                            )">
                        ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
                     </a></td>
                @endif
            @endforeach
        </tbody>
    </table>
    @if(isset($message))
    <br>
    <p style="text-align: center">{{ $message }}</p>
    @endif
</div>

  <script>
    function showEditForm(poDetailId) {
        document.getElementById('date-display-' + poDetailId).style.display = 'none';
        document.getElementById('edit-btn-' + poDetailId).style.display = 'none';
        document.getElementById('date-edit-form-' + poDetailId).style.display = 'block';
    }

    function cancelEdit(poDetailId) {
        document.getElementById('date-display-' + poDetailId).style.display = 'inline';
        document.getElementById('edit-btn-' + poDetailId).style.display = 'inline-block';
        document.getElementById('date-edit-form-' + poDetailId).style.display = 'none';
    }

    function validateDateFormat(inputElement) {
        let dateValue = inputElement.value;
        if (!dateValue || dateValue.includes('undefined')) {
            let today = new Date();
            let yyyy = today.getFullYear();
            let mm = String(today.getMonth() + 1).padStart(2, '0');
            let dd = String(today.getDate()).padStart(2, '0');
            inputElement.value = yyyy + '-' + mm + '-' + dd;
        }
    }

    function saveNewDate(poDetailId) {
        let newDate = document.getElementById('new-date-' + poDetailId).value;

        if (!newDate || newDate === 'undefined') {
            alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
            return;
        }

        console.log({ po_detail_id: poDetailId, new_date: newDate }); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á

        $.ajax({
            url: "{{ route('updatepo.delivery.date') }}", 
            method: "POST",
            data: {
                po_detail_id: poDetailId,
                new_date: newDate,
                _token: "{{ csrf_token() }}"
            },
            headers: {
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            },
            success: function(response) {
                console.log(response); // ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
                if (response.success) {
                    let formattedDate = formatDate(newDate);
                    document.getElementById('date-display-' + poDetailId).innerText = formattedDate;
                    alert("‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
                    cancelEdit(poDetailId);
                    window.location.reload();
                } else {
                    alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + response.message);
                }
            },
            error: function(xhr) {
                console.error(xhr.responseText); // ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô
                alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + xhr.responseText);
            }
        });
    }

    function formatDate(dateString) {
        if (!dateString || dateString === 'undefined') {
            return '';
        }
        try {
            if (dateString.includes('-') && dateString.split('-').length === 3) {
                let parts = dateString.split('-');
                let day = parts[2].padStart(2, '0');
                let month = parts[1].padStart(2, '0');
                let year = parts[0];
                return day + '/' + month + '/' + year;
            }

            let date = new Date(dateString);
            if (isNaN(date.getTime())) {
                return dateString;
            }

            let day = String(date.getDate()).padStart(2, '0');
            let month = String(date.getMonth() + 1).padStart(2, '0');
            let year = date.getFullYear();
            return day + '/' + month + '/' + year;
        } catch (e) {
            console.error("Error formatting date:", e);
            return dateString;
        }
    }
</script>
<!-- Popup -->
<div class="popup-overlay" id="popup" style="display: none;">
    <div class="popup-content">
        <span class="close-btn" onclick="closePopup()">&times;</span>
        <div class="table-container">
            <table>
                <thead>
                    <tr>
                        <th>‡πÄ‡∏•‡∏Ç‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
                        <th>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏¥‡∏•</th>
                        <th>‡∏£‡∏´‡∏±‡∏™‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</th>
                        <th>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</th>
                        <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</th>
                        <th>‡∏ú‡∏∏‡πâ‡∏Ç‡∏≤‡∏¢</th>
                        <th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ</th>
                    </tr>
                </thead>
                <tbody id="popup-body-1">   
                </tbody>
            </table>
            <br>
            <table>
                <thead>     
                    <tr>
                        <th>‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
                        <th>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</th>
                        <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                    </tr>
                </thead>
                <tbody id="popup-body">
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    function openPopup(po_id,po_detail_id, store_name, store_address, recvDate, emp_name, cartype) {
        document.getElementById("popup").style.display = "flex"; // ‡πÅ‡∏™‡∏î‡∏á Popup
    
        // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤ cartype
        let cartypeText = "";
        switch (cartype) {
            case "1":
                cartypeText = "‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏Ñ‡πå";
                break;
            case "2":
                cartypeText = "‡∏£‡∏ñ‡πÉ‡∏´‡∏ç‡πà";
                break;
            default:
                cartypeText = "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó";
        }
    
        let popupBody = document.getElementById("popup-body-1");
        popupBody.innerHTML = `
            <tr>
                <td>${po_id}</td>
                <td>${po_detail_id}</td>
                <td>${store_name}</td>
                <td>${store_address}</td>
                <td>${recvDate}</td>
                <td>${emp_name}</td>
                <td>${cartypeText}</td>
            </tr>
        `;
    
    
    
        let secondPopupBody = document.getElementById("popup-body");
        secondPopupBody.innerHTML = "<tr><td colspan='4'>Loading...</td></tr>";
    
        fetch(`/get-pobill-detail/${po_detail_id}`)
            .then(response => response.json())
            .then(data => {
                console.log("API Response:", data); 
    
                if (Array.isArray(data) && data.length > 0) {
                    secondPopupBody.innerHTML = ""; 
                    
                    data.forEach(item => {
                        secondPopupBody.insertAdjacentHTML("beforeend", `
                            <tr>
                                <td>${item.item_id}</td>
                                <td>${item.item_name}</td>
                                <td>${item.quantity}</td>
                            </tr>
                        `);
                    });
    
                } else {
                    secondPopupBody.innerHTML = "<tr><td colspan='4'>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</td></tr>";
                }
            })
            .catch(error => {
                console.error("Error fetching data:", error);
                secondPopupBody.innerHTML = "<tr><td colspan='4'>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</td></tr>";
            });
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î Popup
    function closePopup() {
        document.getElementById("popup").style.display = "none"; // ‡∏ã‡πà‡∏≠‡∏ô Popup
    }
    function filterTable() {
    let selectedType = document.getElementById("cartype").value; // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å dropdown
    let table = document.getElementById("table-body");
    let rows = table.getElementsByTagName("tr");

    for (let i = 0; i < rows.length; i++) {
        let typeCell = rows[i].getElementsByTagName("td")[8]; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô index ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏ô‡∏™‡πà‡∏á"
        if (typeCell) {
            let typeText = typeCell.textContent.trim(); // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å <td>

            // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤ text ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á dropdown
            let typeValue = "";
            if (typeText === "‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏Ñ‡πå") typeValue = "1";
            if (typeText === "‡∏£‡∏ñ‡πÉ‡∏´‡∏ç‡πà") typeValue = "2";

            // ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á
            if (selectedType === "" || typeValue === selectedType) {
                rows[i].style.display = ""; // ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ñ‡∏ß
            } else {
                rows[i].style.display = "none"; // ‡∏ã‡πà‡∏≠‡∏ô‡πÅ‡∏ñ‡∏ß
            }
        }
    }
}

</script>


<script>
        function searchTable() {
            let searchInput = document.getElementById("search-input").value.toLowerCase();
            let table = document.querySelector("table tbody");
            let rows = table.getElementsByTagName("tr");

            for (let i = 0; i < rows.length; i++) {
                let row = rows[i];
                let cells = row.getElementsByTagName("td");

                // Get the content of the second column (‡∏ö‡∏¥‡∏•‡∏•‡∏≥‡∏î‡∏±‡∏ö)
                let poDetailId = cells[1] ? cells[1].textContent.toLowerCase() : '';

                // Search for the text inside the selected column (‡∏ö‡∏¥‡∏•‡∏•‡∏≥‡∏î‡∏±‡∏ö)
                if (poDetailId.indexOf(searchInput) > -1) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            }
        }

        function sortTableDescending() {
            let table = document.querySelector("table tbody");
            let rows = Array.from(table.getElementsByTagName("tr"));
            
            // Sort rows by po_detail_id (‡∏ó‡∏µ‡πà‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 2) in descending order
            rows.sort((a, b) => {
                let poDetailIdA = a.cells[1].textContent.trim();
                let poDetailIdB = b.cells[1].textContent.trim();
                
                return poDetailIdB - poDetailIdA;  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô b - a ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏≤‡∏Å‡πÑ‡∏õ‡∏ô‡πâ‡∏≠‡∏¢
            });

            // Append the sorted rows back into the table body
            rows.forEach(row => table.appendChild(row));
        }

        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô sort ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
        window.onload = function() {
            sortTableDescending();
        }
        function toggleCheckboxes() {
    var checkAllBox = document.getElementById('checkAll');
    var checkboxes = document.querySelectorAll('input[type="checkbox"]:not(#checkAll)');
    checkboxes.forEach(function(checkbox) {
        checkbox.checked = checkAllBox.checked;
    });
}
</script>
 <script>
    function updateStatuspoback() {
        let selectedIds = [];
        let checkboxes = document.querySelectorAll("input[name='status[]']:checked");

        checkboxes.forEach(checkbox => {
            let row = checkbox.closest('tr');
            let poDetailId = row.querySelector('td:nth-child(3)').textContent; // Get so_detail_id from second column
            selectedIds.push(poDetailId);
        });

        if (selectedIds.length === 0) {
            alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏¥‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï");
            return;
        }

        // Proceed to update
        console.log("Updating status for:", selectedIds); // Log the selected IDs

        fetch('/update-statuspoback', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            },
            body: JSON.stringify({ poDetailIds: selectedIds })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload(); // Optionally reload the page to reflect changes
            } else {
                alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏î‡πâ");
            }
        })
        .catch(error => {
            console.error("Error updating status:", error);
            alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞");
        });
    }   
    
</script>

</body>
</html>